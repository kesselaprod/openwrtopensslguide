#
# OpenSSL rootCA configuration file.
# This is mostly being used for generation of certificate requests.
#

# This definition stops the following lines choking if HOME isn't
# defined.

HOME				= .
RANDFILE            = random.rnd

####################################################################
[ ca ]
default_ca			= rootCA_ca		# The default ca section

####################################################################
[ rootCA_ca ]

dir					= .						# Where everything is kept
RANDFILE            = random.rnd
certs				= $dir/certs			# Where the issued certs are kept
crl_dir				= $dir/crl				# Where the issued crl are kept
serial				= $dir/rootCA.serial 	# The current serial number
database			= $dir/rootCA.index		# database index file.
new_certs_dir		= $dir/newcerts			# default place for new certs.
certificate			= $dir/rootCA.pem 		# The CA certificate
private_key			= $dir/rootCA.key.pem 	# The private key
default_days		= 365					# how long to certify for
crl					= $dir/rootCA.crl 		# The current CRL
crl_dir         	= $dir/crl
crlnumber			= $dir/rootCA.crlnum	# the current crl number must be commented out to leave a V1 CRL
name_opt 			= multiline, align		# Subject Name options
cert_opt 			= no_pubkey				# Certificate field options
copy_extensions 	= copy
crl_extensions 		= crl_ext
default_crl_days	= 180			# how long before next CRL
default_md			= sha256		# use public key default MD
preserve			= no			# keep passed DN ordering
email_in_dn         = no
unique_subject		= no			# Set to 'no' to allow creation of several certs with same subject.
policy				= policy_rootCA

# For the CA policy
[ policy_rootCA ]
countryName				= optional
stateOrProvinceName		= optional
organizationName		= supplied
organizationalUnitName	= optional
commonName				= supplied
emailAddress			= optional

####################################################################
[ req ]
default_bits			= 4096
default_keyfile 		= rootCA.key.pem
encrypt_key				= yes
default_md          	= sha256
string_mask 			= utf8only
utf8                	= yes
prompt                  = no
distinguished_name		= distinguished_name
req_extensions 			= rootCA_req_ext 	# The extensions to add to a certificate request

[ distinguished_name ]
organizationName        = MyRootCA                          # whatever name you want
commonName              = My Root Certification Authority   # whatever you want

[ rootCA_req_ext ]
subjectKeyIdentifier    = hash
subjectAltName			= @subject_alt_name

[ rootCA_ext ]
basicConstraints 		= critical, CA:true
keyUsage 				= critical, cRLSign, digitalSignature, keyCertSign
#nameConstraints			= critical, @name_constraints
subjectKeyIdentifier	= hash
subjectAltName			= @subject_alt_name
authorityKeyIdentifier  = keyid:always
issuerAltName           = issuer:copy
authorityInfoAccess     = @auth_info_access
crlDistributionPoints   = crl_dist

[ v3_intermediateCA ]
basicConstraints        = critical, CA:true, pathlen:0
keyUsage                = critical, keyCertSign, cRLSign
subjectKeyIdentifier    = hash
subjectAltName          = @subject_alt_name
authorityKeyIdentifier  = keyid:always
issuerAltName           = issuer:copy
authorityInfoAccess     = @auth_info_access
crlDistributionPoints   = crl_dist

[ crl_ext ]
authorityKeyIdentifier  = keyid:always
authorityInfoAccess     = @auth_info_access

[ subject_alt_name ]
URI						= http://mylocalrouter.localdomain      # doesnt matter
email 					= your@email.com

[ name_constraints ]
permitted;DNS.1         = mylocalrouter.localdomain
permitted;DNS.2         = *.mylocalrouter.localdomain
permitted;DNS.3			= local
permitted;IP.1          = 192.168.1.1/255.255.255.0

[ auth_info_access ]
caIssuers;URI           = http://192.168.1.1/ssl/rootCA.pem

[ crl_dist ]
fullname                = URI:http://192.168.1.1/ssl/rootCA.crl

